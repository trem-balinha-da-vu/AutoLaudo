@startuml AutoLaudoClasses
skinparam classAttributeIconSize 0
left to right direction

'---------------------- Usuário, Perfil, Permissão -------------------------
class Usuario {
  + id: int
  + nome: string
  + email: string
  + senha_hash: string
  + id_perfil: int
  + uuid: string
  + autenticar(email, senha)
  + listar_permissoes(): List<Permissao>
}

class Perfil {
  + id_perfil: int
  + nome_perfil: string
}

class Permissao {
  + id: int
  + nome_permissao: string
}

class UsuarioPermissao {
  + id_usuario: int
  + id_permissao: int
}

Usuario "N" --|| "1" Perfil : pertence >
Usuario "1" -- "0..*" UsuarioPermissao : possui >
Permissao "1" -- "0..*" UsuarioPermissao : pertence >
Usuario "1" -- "0..1" Perito : é_perito >
Usuario "1" -- "0..1" Administrador : é_admin >

'---------------------- Perito, Gerente, Administrador -------------------------
class Perito {
  + id_usuario: int
  + crm_perito: string
  + area_especialidade: string
  + nivel_experiencia: string
  + telefone_contato: string
  + ativo: bool
  + uuid: string
  + promover_gerente(id_perito: int) : GerenteRegional
  + rebaixar_perito (id_perito: int): Perito
}

class GerenteRegional {
  + id_perito: int
  + regional: string
  + uuid: string
  + listar_peritos_regiao()
  + validar_laudo(laudo: LaudoVeicular)
}

class Administrador {
  + id_usuario: int
  + id_nivel: int
  + uuid: string
  + cadastrar_usuario(usuario: Usuario)
  + definir_permissao(usuario: Usuario, permissao: Permissao)
  + resetar_senha(usuario: Usuario)
}

class NivelAcesso {
  + id_nivel: int
  + descricao: string
}

Perito "1" -- "0..1" GerenteRegional : é_gerente >
Administrador "N" --|| "1" NivelAcesso : tem_nível >

'---------------------- Veículo e Integração DETRAN -------------------------
class Veiculo {
  + placa: string
  + chassi: string
  + renavam: string
  + modelo: string
  + ano_fabricacao: int
  + status_registro: string
  + cadastrar()
  + consultar_detran()
  + listar_laudos(): List<LaudoVeicular>
}

class IntegracaoDetran {
  + id_integracao: int
  + api: string
  + data_chamada: datetime
  + resultado: string
  + placa_veiculo: string
  + consultar()
}

Veiculo "1" -- "0..*" IntegracaoDetran : integra >

'---------------------- Laudo, Status, Selo, Orgao, etc. -------------------------
class LaudoStatus {
  + id_status: int
  + nome: string
}

class OrgaoRequisitante {
  + id_orgao: int
  + nome: string
}

class SeloDigital {
  + id_selo: int
  + data_emissao: datetime
  + autoridade_emissora: string
  + hash_conformidade: string
  + validar_selo(): bool
}

class FormularioLaudo {
  + id: int
  + modo_offline: bool
  + id_template: int
  + preencher_campo(nome: string, valor: string)
  + validar_formulario(): bool
  + enviar_para_laudo(): LaudoVeicular
}

class LaudoVeicular {
  + id_laudo: int
  + data_criacao: datetime
  + data_entrega: datetime
  + data_emissao: datetime
  + resumo_problema: string
  + detalhamento_analises: string
  + conclusao: string
  + observacoes: string
  + hash_documento: string
  + id_status: int
  + id_orgao: int
  + id_selo: int
  + id_formulario: int
  + placa_veiculo: string
  + id_perito: int
  + gerar_pdf()
  + atualizar_status(novo_status: int)
  + anexar_imagem(imagem: Imagem)
  + listar_normas(): List<Norma>
}

LaudoVeicular "N" --|| "1" LaudoStatus : tem_status >
LaudoVeicular "N" --|| "1" OrgaoRequisitante : requisitado_por >
LaudoVeicular "N" --|| "1" SeloDigital : selado >
LaudoVeicular "N" --|| "1" FormularioLaudo : formulário >
LaudoVeicular "N" --|| "1" Veiculo : do_veiculo >
LaudoVeicular "N" --|| "1" Usuario : periciado_por >

'---------------------- LaudoNorma, Norma, Templates, Campos -------------------------
class LaudoNorma {
  + id_laudo: int
  + id_norma: int
}

class Norma {
  + id: int
  + nome_norma: string
  + tipo: string
  + texto_norma: string
  + validar_laudo(laudo: LaudoVeicular): bool
}

class TemplateLaudo {
  + id: int
  + nome: string
  + versao: string
}

class TemplateNorma {
  + id_template: int
  + id_norma: int
}

class TemplateLaudoCamposObrigatorios {
  + id_template: int
  + campos_obrigatorios: string
}

class FormLaudoCampo {
  + id_formulario: int
  + nome_campo: string
  + valor: string
}

TemplateLaudo "1" -- "0..*" TemplateNorma : referencia >
Norma "1" -- "0..*" TemplateNorma : usada_por >
TemplateLaudo "1" -- "0..*" TemplateLaudoCamposObrigatorios : campos_obrigatórios >
TemplateLaudo "1" -- "0..*" FormularioLaudo : instancia >
FormularioLaudo "1" -- "0..*" FormLaudoCampo : campos >

LaudoVeicular "1" -- "0..*" LaudoNorma : valida_conforme >
Norma "1" -- "0..*" LaudoNorma : aplicada_em >

'---------------------- Imagem, Histórico, Sincronizador -------------------------
class Imagem {
  + id_imagem: int
  + caminho: string
  + legenda: string
  + tipo: string
  + id_laudo: int
  + excluir()
}

class HistoricoAlteracao {
  + id_hist: int
  + data_alteracao: datetime
  + descricao: string
  + id_usuario: int
  + id_laudo: int
  + registrar_alteracao(usuario: Usuario, desc: string)
}

LaudoVeicular "1" -- "0..*" Imagem : imagens >
LaudoVeicular "1" -- "0..*" HistoricoAlteracao : historico >
Usuario "1" -- "0..*" HistoricoAlteracao : altera >

class Sincronizador {
  + id_sync: int
  + data_sync: datetime
  + id_usuario: int
  + id_laudo: int
  + sincronizar()
}

LaudoVeicular "1" -- "0..*" Sincronizador : sincs >
Usuario "1" -- "0..*" Sincronizador : sincs >

@enduml
